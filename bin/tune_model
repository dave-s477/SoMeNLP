#!/usr/bin/env python

import argparse
import json

from pathlib import Path

from somenlp.utils import get_time_marker, str2bool, gpu_setup
from somenlp.NER import tune

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description = "Hyperparameter tuning for NER")
    parser.add_argument("--config", default='', help="Full path to model configuration for tuning.")
    parser.add_argument("--data-file-ext", default='.data.txt', help="Extension for recognizing data files.")
    parser.add_argument("--feature-file-ext", default='.data.txt.features.npz', help="Extension for recognizing feature files.")
    parser.add_argument("--label-file-ext", default='.labels.txt', help="Extension for recognizing label files.")
    parser.add_argument("--gpu", default=True, type=str2bool, help="Whether to use a GPU, default option decides automatically on the GPU with least usage if one is available.")
    parser.add_argument("--save-dir", default='save', help="Location where to save output models.")
    args = parser.parse_args()

    current_time = get_time_marker()

    tuning_c_path = Path(args.config)
    if not tuning_c_path.is_file():
        raise(RuntimeError("Tuning configuration file does not exist"))
    with tuning_c_path.open(mode='r') as t_file:
        tuning_config = json.load(t_file)

    if 'checkpoint' not in tuning_config['general'].keys():
        print("Model checkpoint not explicitly given --- assuming there is non and training from scratch.")
        tuning_config['general']['checkpoint'] = { 'model': '' }

    print("Setting up cuda")
    device = gpu_setup.setup_cuda(args.gpu)

    tune(tuning_config, current_time, args.data_file_ext, args.label_file_ext, args.feature_file_ext, device, save_dir=args.save_dir.rstrip('/'))
    