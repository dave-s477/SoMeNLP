#!/usr/bin/env python

import os
import argparse
import json

from pathlib import Path

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description = "Calculate a word embedding (currently only W2V skipgram) based on a corpus.")
    parser.add_argument("--input", required=True, help="Path to input file or directory.")
    parser.add_argument("--file-ext", default='.prepro.txt', help="How to select input files in case an input directory is provided.")
    parser.add_argument("--pred-ext", default='.prepro.txt.pred.software', help="Prediction file extension")
    parser.add_argument("--out-name", default='preds', help="Where to save results. If not provided results are only written to output console.")
    args = parser.parse_args()

    in_path = Path(args.input)
    if in_path.is_file():
        print("Predicting file: {}".format(in_path))
        all_files = [in_path]
    elif in_path.is_dir():
        print("Predicting all files in folder: {}".format(in_path))
        all_files = sorted(list(in_path.rglob('*{}'.format(args.file_ext))), key=str)
    else:
        raise(RuntimeError("Input path does not exist: {}".format(in_path)))

    files_to_predict = []
    for f in all_files:
        if not os.path.isfile(str(f).replace(args.file_ext, args.pred_ext)):
            files_to_predict.append(str(f))

    with open(args.out_name + '.json', 'w') as j_out:
        json.dump(files_to_predict, j_out, indent=4)