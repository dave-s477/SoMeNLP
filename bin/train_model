#!/usr/bin/env python

import argparse
import json

from pathlib import Path

from somenlp.utils import get_time_marker, str2bool, gpu_setup
from somenlp.NER import main


# parse arguments
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description = "Run BiLSTM-CRF for NER.")
    parser.add_argument("--model-config", default='', help="Full path to model configuration for training.")
    parser.add_argument("--data-config", default='', help="Full path to data configuration for training.")
    parser.add_argument("--data-file-ext", default='.data.txt', help="Extension for recognizing data files.")
    parser.add_argument("--feature-file-ext", default='.data.txt.features.npz', help="Extension for recognizing feature files.")
    parser.add_argument("--label-file-ext", default='.labels.txt', help="Extension for recognizing label files.")
    parser.add_argument("--gpu", default=True, type=str2bool, help="Whether to use a GPU, default option decides automatically on the GPU with least usage if one is available.")
    parser.add_argument("--save-dir", default='save', help="Location where to save output models.")
    parser.add_argument("--left-context", default=0)
    parser.add_argument("--right-context", default=0)
    parser.add_argument("--maximum-context", default=False)
    args = parser.parse_args()

    # get current name -- used for naming a directory in 'save'
    current_time = get_time_marker()

    # check if model and data config files exist
    model_c_path = Path(args.model_config)
    data_c_path = Path(args.data_config)

    if not model_c_path.is_file():
        raise(RuntimeError("Model configuration file does not exist"))
    if not data_c_path.is_file():
        raise(RuntimeError("Data configuration file does not exist"))

    # read contents of config files as  model_config and data_config
    with model_c_path.open(mode='r') as m_file, data_c_path.open(mode='r') as d_file:
        model_config = json.load(m_file)
        data_config = json.load(d_file)

    # check if checkpoint already exists , if not traning will start a new session 
    if 'checkpoint' not in model_config['general'].keys():
        print("Model checkpoint not explicitly given --- assuming there is non and training from scratch.")
        model_config['general']['checkpoint'] = { 'model': '' }

    # select gpu if avalable , else cpu
    print("Setting up cuda")
    device = gpu_setup.setup_cuda(args.gpu)

    # pass contents of config files -- dict , time in dd-mm-yyyy_HH-mm-ss format, '.data.txt' , '.labels.txt', '.data.txt.features.npz', 'cpu / gpu', 'save'
    main(model_config, data_config, current_time, args.data_file_ext, args.label_file_ext, args.feature_file_ext, device, bef= args.left_context, aft = args.right_context,  context_is_paragrapgh = args.maximum_context,  save_dir=args.save_dir.rstrip('/'))
    
