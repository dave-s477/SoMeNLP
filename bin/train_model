#!/usr/bin/env python

import argparse
import json

from pathlib import Path

from somenlp.utils import get_time_marker, str2bool
from somenlp.NER import main

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description = "Run BiLSTM-CRF for NER.")
    parser.add_argument("--model-config", default='', help="Full path to model configuration for training.")
    parser.add_argument("--data-config", default='', help="Full path to data configuration for training.")
    parser.add_argument("--data-file-ext", default='.data.txt', help="Extension for recognizing data files.")
    parser.add_argument("--feature-file-ext", default='.data.txt.features.npz', help="Extension for recognizing feature files.")
    parser.add_argument("--label-file-ext", default='.labels.txt', help="Extension for recognizing label files.")
    parser.add_argument("--gpu", default=True, type=str2bool, help="Whether to use a GPU, default option decides automatically on the GPU with least usage if one is available.")
    args = parser.parse_args()

    current_time = get_time_marker()

    model_c_path = Path(args.model_config)
    data_c_path = Path(args.data_config)

    if not model_c_path.is_file():
        raise(RuntimeError("Model configuration file does not exist"))
    if not data_c_path.is_file():
        raise(RuntimeError("Data configuration file does not exist"))
    with model_c_path.open(mode='r') as m_file, data_c_path.open(mode='r') as d_file:
        model_config = json.load(m_file)
        data_config = json.load(d_file)

    if 'checkpoint' not in model_config['general'].keys():
        print("Model checkpoint not explicitly given --- assuming there is non and training from scratch.")
        model_config['general']['checkpoint'] = { 'model': '' }

    main(model_config, data_config, current_time, args.data_file_ext, args.label_file_ext, args.feature_file_ext, args.gpu)
    